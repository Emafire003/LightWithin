plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroup 'org.ladysnake'
			includeGroupByRegex 'dev\\.onyxstudios.*'
		}
	}

	maven { url 'https://jitpack.io' }

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//ColoredGlowLib
	modImplementation "maven.modrinth:coloredglowlib:${project.coloredglowlib_version}"

	//CardinalComponents (old version 4.0.1)
	include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}")
	include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}")

	//Renderer TODO will need updating back to master-SNAPSHOT for 1.19.2
	//include modImplementation( 'com.github.0x3C50:Renderer:9804cf7d99' )c4faf83
	//1.20.1
	include modImplementation( 'com.github.0x3C50:Renderer:2273f5e562' )//2273f5e
	//include modImplementation("com.github.0x3C50:Renderer:master-SNAPSHOT")

	//StructurePlacerAPI
	modImplementation "maven.modrinth:structureplacerapi:${project.structureplacerapi_version}"
	include "maven.modrinth:structureplacerapi:${project.structureplacerapi_version}"

	//===========OPTIONAL DEPENDENCIES===========

	//Factions
	modImplementation "maven.modrinth:factions:${project.factions_version}"

	//Argonauts
	modImplementation "maven.modrinth:argonauts:${project.argonauts_version}"
	modImplementation "maven.modrinth:resourceful-lib:${project.resourcefullib_version}"
	//Which requires maybe: resourceful-lib

	//Open parties and claims aka OPAC
	modImplementation "maven.modrinth:open-parties-and-claims:${project.opac_version}"
	//Which require maybe: forge-config-api-port

	//LevelZ party addon -- Maybe later
	//modImplementation "maven.modrinth:partyaddon:${project.levelz_party_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
